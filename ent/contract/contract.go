// Code generated by entc, DO NOT EDIT.

package contract

const (
	// Label holds the string label denoting the contract type in the database.
	Label = "contract"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStartDate holds the string denoting the start_date field in the database.
	FieldStartDate = "start_date"
	// FieldEndDate holds the string denoting the end_date field in the database.
	FieldEndDate = "end_date"
	// FieldPayAmount holds the string denoting the pay_amount field in the database.
	FieldPayAmount = "pay_amount"
	// FieldPayDate holds the string denoting the pay_date field in the database.
	FieldPayDate = "pay_date"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeProperty holds the string denoting the property edge name in mutations.
	EdgeProperty = "property"
	// Table holds the table name of the contract in the database.
	Table = "contracts"
	// UsersTable is the table that holds the users relation/edge. The primary key declared below.
	UsersTable = "user_contracts"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// PropertyTable is the table that holds the property relation/edge.
	PropertyTable = "contracts"
	// PropertyInverseTable is the table name for the Property entity.
	// It exists in this package in order to avoid circular dependency with the "property" package.
	PropertyInverseTable = "properties"
	// PropertyColumn is the table column denoting the property relation/edge.
	PropertyColumn = "property_contract"
)

// Columns holds all SQL columns for contract fields.
var Columns = []string{
	FieldID,
	FieldStartDate,
	FieldEndDate,
	FieldPayAmount,
	FieldPayDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "contracts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"property_contract",
}

var (
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"user_id", "contract_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
